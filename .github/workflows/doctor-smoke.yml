name: ODAVL CI Doctor (smoke push)
on:
  push:
    branches: ["odavl/ci-doctor-smoke-20250926"]
  workflow_dispatch:
permissions:
  contents: read
  actions: write
  checks: write
  security-events: write
  pull-requests: write
jobs:
  run-doctor:
    runs-on: ubuntu-latest
    steps:
      - name: Pre diagnostics
        run: |
          echo "runner pwd before checkout: $(pwd)"
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Guarantee artifacts exist (absolute)
        if: always()
        shell: bash
        run: |
          set -e
          echo "WS=$GITHUB_WORKSPACE"
          mkdir -p "$GITHUB_WORKSPACE/reports/doctor"
          echo "# smoke sentinel $(date -u)" > "$GITHUB_WORKSPACE/reports/doctor/README.txt"
          echo "# no-op patch via guarantee $(date -u)" > "$GITHUB_WORKSPACE/reports/doctor/patch.diff"
          echo "hello from doctor smoke $(date -u)" > "$GITHUB_WORKSPACE/doctor-test.txt"
          echo "Listing created:"
          ls -la "$GITHUB_WORKSPACE/reports/doctor" || true
          ls -la "$GITHUB_WORKSPACE/doctor-test.txt" || true

      - name: Test artifact (sanity)
        if: always()
        shell: bash
        run: |
          echo "hello from doctor smoke $(date -u)" > "$GITHUB_WORKSPACE/doctor-test.txt"
          ls -la "$GITHUB_WORKSPACE/doctor-test.txt"

      - name: Upload test artifact (v3)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: doctor-test-${{ github.run_id }}
          path: ${{ github.workspace }}/doctor-test.txt
          if-no-files-found: error
          retention-days: 1
      - uses: ./.github/actions/odavl-doctor-runner
        continue-on-error: true
        with:
          mode: advice
          max_files: 10
          max_lines: 40
          protected_paths: "**/security/**,**/*.spec.*,**/public-api/**"
          task_name: "ci-heal"

      - name: Ensure artifact directory & sentinel
        shell: bash
        run: |
          echo "Workspace: $GITHUB_WORKSPACE"
          mkdir -p reports/doctor
          echo "smoke sentinel $(date -u)" > reports/doctor/SENTINEL.txt
          echo "Listing reports/doctor before packaging:"
          ls -la reports/doctor || true

      - name: Package doctor artifacts
        if: always()
        shell: bash
        run: |
          echo "Packaging artifacts from: $(pwd)"
          mkdir -p reports/doctor
          [ -s reports/doctor/patch.diff ] || echo "# no-op patch (packaged)" > reports/doctor/patch.diff
          [ -f reports/doctor/README.txt ] || echo "Artifacts generated by ODAVL Doctor (packaged)." > reports/doctor/README.txt
          tar -czf "${{ github.workspace }}/doctor-artifacts.tgz" reports/doctor
          echo "Archive contents:"
          tar -tzf "${{ github.workspace }}/doctor-artifacts.tgz" | sed -n '1,20p'

      - name: Pre-upload check
        if: always()
        shell: bash
        run: |
          echo "WS: $GITHUB_WORKSPACE"
          ls -la "$GITHUB_WORKSPACE"
          test -s "$GITHUB_WORKSPACE/doctor-artifacts.tgz" && echo "tgz present & non-empty" || (echo "tgz missing!"; exit 1)

      - name: Upload packaged artifact (v3, unique)
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: doctor-artifacts-${{ github.run_id }}
          path: ${{ github.workspace }}/doctor-artifacts.tgz
          if-no-files-found: error
          retention-days: 3

      - name: Upload packaged artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: doctor-artifacts
          path: doctor-artifacts.tgz
          if-no-files-found: error
          retention-days: 3

      - name: Upload artifacts (guard)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: doctor-artifacts
          path: reports/doctor
          if-no-files-found: warn
          retention-days: 3

      - name: Download doctor artifacts
        uses: actions/download-artifact@v4
        with:
          name: doctor-artifacts
          path: reports/doctor

      - name: Shadow Verify (ephemeral)
        if: ${{ hashFiles('reports/doctor/patch.diff') != '' }}
        id: shadow
        shell: bash
        run: |
          set -e
          if [ ! -s reports/doctor/patch.diff ]; then
            echo "No patch.diff (empty or missing) — skipping verify."
            exit 0
          fi
          if head -n1 reports/doctor/patch.diff | grep -q '# no-op'; then
            echo "No-op patch — skipping verify."
            exit 0
          fi
          git apply --check reports/doctor/patch.diff
          git apply reports/doctor/patch.diff
          pnpm install --frozen-lockfile || pnpm install
          (pnpm -w run build || true) 2>&1 | tee -a reports/doctor/shadow-verify.txt
          (pnpm -w run lint --if-present || true) 2>&1 | tee -a reports/doctor/shadow-verify.txt
          (pnpm -w run typecheck --if-present || true) 2>&1 | tee -a reports/doctor/shadow-verify.txt
          (pnpm -w run test --if-present || true) 2>&1 | tee -a reports/doctor/shadow-verify.txt
      - name: Post-run diagnostics
        if: always()
        shell: bash
        run: |
          echo "Tree of reports (depth 2):"
          find reports -maxdepth 2 -type f -print 2>/dev/null || true
          echo "Done."
        continue-on-error: true

      - name: Revert patch
        if: ${{ steps.shadow.outcome != '' }}
        run: git reset --hard

      - name: Upload shadow verify logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: doctor-shadow-verify
          path: reports/doctor/shadow-verify.txt
          if-no-files-found: ignore
