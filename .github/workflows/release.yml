name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install pnpm
        run: npm install -g pnpm@8
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Build CLI
        run: pnpm --filter @odavl/cli run build
      - name: Pack CLI
        run: cd apps/cli && npm pack
      - name: Upload CLI artifact
        uses: actions/upload-artifact@v4
        with:
          name: odavl-cli-tarball
          path: apps/cli/odavl-cli-*.tgz

      - name: Get Version
        id: version
        run: echo "version=$(node -p 'require(\"./apps/cli/package.json\").version')" >> $GITHUB_OUTPUT

      - name: Generate Changelog
        id: changelog
        run: |
          echo "changes_file=CHANGELOG.md" >> $GITHUB_OUTPUT
          # Optionally generate or update CHANGELOG.md here

      - name: Generate QA Report
        id: qa_report
        run: |
          if [ -f QA_REPORT.md ]; then
            echo "qa_exists=true" >> $GITHUB_OUTPUT
            echo "qa_file=QA_REPORT.md" >> $GITHUB_OUTPUT
          else
            echo "qa_exists=false" >> $GITHUB_OUTPUT
            echo "qa_file=" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        run: |
          RELEASE_CMD="gh release create ${{ steps.version.outputs.version }} --title 'ODAVL Studio ${{ steps.version.outputs.version }}' --notes-file ${{ steps.changelog.outputs.changes_file }}"
          if [ "${{ steps.qa_report.outputs.qa_exists }}" = "true" ]; then
            RELEASE_CMD="$RELEASE_CMD ${{ steps.qa_report.outputs.qa_file }}"
          fi
          eval $RELEASE_CMD

      - name: Release Summary
        run: |
          echo "ðŸš€ Release ${{ steps.version.outputs.version }} created successfully!"
          echo "ðŸ“‹ Changelog: ${{ steps.changelog.outputs.changes_file }}"
          if [ "${{ steps.qa_report.outputs.qa_exists }}" = "true" ]; then
            echo "ðŸ“Š QA Report: ${{ steps.qa_report.outputs.qa_file }}"
          fi
