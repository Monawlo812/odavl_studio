name: shadow
on:
  workflow_dispatch:
  push:
    branches:
      - 'odavl/**'

jobs:
  node-shadow:
    name: shadow (node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18, 20]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - run: pnpm install || true
      - run: pnpm -r build || true
      - run: pnpm -r test || true
      - run: echo '{"pack":"node","node":"${{ matrix.node }}","done":true}'

  python-shadow:
    name: shadow (python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/requirements*.txt') }}
      - run: python -m pip install --upgrade pip
      - run: if [ -f requirements.txt ]; then pip install -r requirements.txt; else pip install pytest ruff black pip-audit; fi
      - run: ruff . --exit-zero || true
      - run: black --check . || true
      - run: pytest -q --maxfail=1 || true
      - run: pip-audit -f json || true
      - run: echo '{"pack":"python","py":"${{ matrix.python-version }}","done":true}'
