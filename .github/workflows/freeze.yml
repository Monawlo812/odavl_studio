name: Freeze Audit
permissions:
  contents: write
  pull-requests: write
on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]
  schedule:
    - cron: '17 2 * * *'
jobs:
  freeze:
    concurrency:
      group: freeze-${{ github.ref }}
      cancel-in-progress: true
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Secret scan (gitleaks)
        if: ${{ github.event_name == 'pull_request' }}
        shell: bash
        run: |
          if ! command -v gitleaks >/dev/null 2>&1; then
            curl -sSL https://raw.githubusercontent.com/gitleaks/gitleaks/master/install.sh | bash -s -- -b /usr/local/bin
          fi
          mkdir -p reports
          gitleaks detect --redact --no-banner --report-path reports/gitleaks.json
      - name: Protected paths guard
        if: ${{ github.event_name == 'pull_request' }}
        shell: bash
        run: |
          bash scripts/guards/protected-paths.sh

        - name: Prepare dirs
          run: mkdir -p reports/evidence reports/shadow reports/executive reports/cleanup

        - name: Upload gitleaks report
          if: ${{ github.event_name == 'pull_request' }}
          uses: actions/upload-artifact@v4
          with:
            name: gitleaks-report
            path: reports/gitleaks.json
            if-no-files-found: warn

        - name: Generate evidence (shadow, attestation, cleanup, observability, all-in-one, bundle)
          run: |
            node scripts/shadow-verify.mjs
            node scripts/attest.mjs
            node scripts/kill-list.mjs
            node scripts/observability.mjs
            node scripts/synthesize-all-in-one.mjs
            node scripts/bundle-report.mjs

        - name: Run smoke test
          run: node scripts/tests/smoke.mjs

        - name: Check for src/ changes
          id: srcdiff
          run: |
            git fetch origin main
            if git diff --name-only origin/main...HEAD | grep '^src/'; then echo "src_changed=true" >> $GITHUB_OUTPUT; else echo "src_changed=false" >> $GITHUB_OUTPUT; fi

        - name: Public API check
          if: steps.srcdiff.outputs.src_changed == 'true'
          run: node scripts/guards/public-api-check.mjs

        - name: Upload API baseline
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: api-baseline
            path: reports/api.d.ts
            if-no-files-found: warn


      - name: Run final audit
        run: node scripts/freeze-audit.mjs

      - name: Show final-audit.json in logs
        run: cat reports/final-audit.json

      - name: Add final audit to job summary
        run: |
          echo "## Final Audit Result" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "```json" >> $GITHUB_STEP_SUMMARY
          cat reports/final-audit.json >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY

        - name: Run learning script
          run: node scripts/learn/outcomes.mjs

        - name: Upload learning outcomes
          uses: actions/upload-artifact@v4
          with:
            name: learn-outcomes
            path: reports/learn/*.json
            if-no-files-found: warn

      - name: Write repo status file (final-audit-status.md) and push
        if: github.ref == 'refs/heads/main'
        run: |
          node -e "const fs=require('fs');const j=JSON.parse(fs.readFileSync('reports/final-audit.json','utf8')); const ok=j.allPresent?'✅':'❌'; const lines=[
            '# Final Audit Status',
            '',
            `- Result: ${ok} allPresent=${j.allPresent}`,
            `- Timestamp: ${j.timestamp || new Date().toISOString()}`,
            '',
            '## Evidence',
            ...(j.evidence||[]).map(e=>`- ${e.file}: ${e.exists?'✅':'❌'}`)
          ].join('\n'); fs.writeFileSync('reports/final-audit-status.md', lines);"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add reports/final-audit-status.md
          git commit -m "chore(audit): update final-audit-status [skip ci]" || echo "No changes to commit"
          git push

      - name: Comment result on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const j = JSON.parse(fs.readFileSync('reports/final-audit.json','utf8'));
            const ok = j.allPresent ? '✅' : '❌';
            const body = [
              `**Freeze Audit** ${ok}`,
              '',
              '```json',
              JSON.stringify(j, null, 2),
              '```'
            ].join('\n');
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body
            });

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: final-audit-and-evidence
          path: |
            reports/final-audit.json
            reports/final-audit.md
            reports/evidence/
            reports/shadow/
            reports/executive/
            reports/cleanup/

      - name: Fail if allPresent is false
        run: |
          node -e "const fs=require('fs');const j=JSON.parse(fs.readFileSync('reports/final-audit.json','utf8')); if(!j.allPresent){console.error('Freeze Audit FAILED: allPresent=false'); process.exit(1)} console.log('Freeze Audit OK: allPresent=true')"
